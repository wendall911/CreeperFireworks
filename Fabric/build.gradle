plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}

version = fabric_mod_version
archivesBaseName = "${mod_id}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings(loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_mc_version}:${parchment_version}@zip")
    })

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation "com.illusivesoulworks.spectrelib:spectrelib-fabric:${spectrelib_version}"
    include "com.illusivesoulworks.spectrelib:spectrelib-fabric:${spectrelib_version}"

    modRuntimeOnly("com.terraformersmc:modmenu:${mod_menu_version}") {
        transitive = false
    }

    include group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-fabric', version: "${spectrelib_version}"

    // Testing Mods
    //modRuntimeOnly "curse.maven:mod-XXX:XXX"
}

loom {
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

def changelogFile = project(":").projectDir.toString() + '/build/libs/changelog.txt'

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (project.hasProperty('cfcurseApiKey')) {
        apiToken = project.cfcurseApiKey
        def mainFile = upload(project.cfcurseId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
        mainFile.changelog = file(changelogFile)
        mainFile.addJavaVersion("Java ${java_version}")
        mainFile.addModLoader('Fabric')
        mainFile.releaseType = "${release_type}"
        "${release_versions}".split(',').each {
            mainFile.addGameVersion("${it}")
        }
        mainFile.addRequirement('fabric-api')
        mainFile.addOptional('creeper-overhaul')
    }
}

modrinth {
    if (project.hasProperty('cfModrinthId')) {
        token = project.modrinthKey
        projectId = project.cfModrinthId
        version = getVersion()
        versionType = "${release_type}"
        if (file(changelogFile).exists()) {
            changelog = file(changelogFile).text
        }
        uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
        gameVersions = "${release_versions}".split(",") as List<String>
        dependencies {
            required.project 'fabric-api'
            optional.project 'creeper-overhaul'
        }
    }
}
